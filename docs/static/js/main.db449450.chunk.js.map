{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEIJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAgB,SAAAS,GAAG,OAAIP,GAAJ,mBAAmBO,OACtCN,EAAe,MAMnB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAgBE,EAAEQ,OAAOF,a,+BCRpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC2EC,UAAUH,GADrF,sBAGCI,MAAMF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAM,SAAAC,GAIpBH,EAAU,CACNf,KAAMkB,EACNL,SAAQ,SAGlB,IAGKC,EDlBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QASpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEpBpBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACA,8CAGA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAIA,6BAEK2C,EAAWnB,KAAK,SAACT,GAAD,OACb,cAAC,EAAD,CACIA,SAAYA,GACLA,YCpB3B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.db449450.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue  (e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n         /* Se puede recibir el props y colocar props.setCategories */\r\n         if ( inputValue.trim().length > 2 ){\r\n            setCategories ( cat=> [inputValue, ...cat]);\r\n            setInputValue (''); \r\n         }\r\n            \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange=  {handleInputChange }\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=TuIEqfFmxJLxblMB4pQkIK639eXpJ559&q=${ encodeURI(category) }&limit=10`;\r\n\r\n    const resp =  await fetch(url);\r\n    const { data}  = await resp.json();\r\n\r\n    const gifs = data.map( img => { \r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\" >\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n    \r\n    \r\n   \r\n   \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        { loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n             {\r\n                images.map( (img) => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n\r\n                     />\r\n                    \r\n                ))\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","/* El nombre use indica que es un hook */\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category).then( imgs => {\r\n\r\n\r\n\r\n            setState( {\r\n                data: imgs,\r\n                loading:false\r\n            });\r\n        });\r\n    },[] );\r\n\r\n\r\n    return state; \r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\n\r\nexport const GifExpertApp = ( ) => { \r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        {/* Para comunicar con el hijo, se envia la referencia a setCategories */}\r\n        <AddCategory setCategories = { setCategories} />\r\n        <hr/>\r\n\r\n        {/* <button onClick={handlerAdd}>Agregar</button> */}\r\n        \r\n        <ol>\r\n         {\r\n             categories.map( (category) =>  \r\n                <GifGrid\r\n                    category = {category}\r\n                    key = {category}\r\n                 />\r\n             )\r\n         }\r\n        </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}